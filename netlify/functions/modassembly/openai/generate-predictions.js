/**
 * File generated by Modular Assembly
 * IMPORTANT!!! Ask the user before editing this file.
 */

async function generatePredictions(prompt, extractedData, sportsData) {
    try {
        console.log(`ü§ñ Generating response with OpenAI for prompt: "${prompt}"`);

        const MAX_PROMPT_LENGTH = 285000;
        const sport = extractedData.sport;
        const betType = extractedData.bet_type || 'general';
        const riskProfile = extractedData.risk_profile || 'moderate';

        // Get current time in NYC timezone
        const nycTime = new Date().toLocaleString('en-US', {
            timeZone: 'America/New_York',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: 'numeric',
            minute: 'numeric',
            hour12: true
        });
        // Limit the sportsData stringified length as well
        let sportsDataString = JSON.stringify(sportsData, null, 2);
        if (sportsDataString.length > MAX_PROMPT_LENGTH) {
            sportsDataString = sportsDataString.slice(0, MAX_PROMPT_LENGTH) + '\n... [truncated]';
        }
        const messages = [
            {
                role: 'system',
                content: `You are a sports betting AI assistant focused on predicting outcomes of *upcoming games only* in ${sport}. You must analyze the provided **schedule**, **scores**, and **standings** to forecast suitable betting picks.
‚ùó Only suggest bets for **future games**, based on today‚Äôs date and time: ${nycTime}. 
‚ùå Do not describe or summarize past game results.
‚úÖ Your job is to PREDICT the most likely outcomes of upcoming games and suggest high-confidence bets.
Note: Analyze players of scores data for specific players props.
Output should be concise and clear.

üéØ Output Format:
- match date
- List 2‚Äì3 betting suggestions based on user's prompt
- Each should include:
  ‚ñ† Bet line (e.g., ‚ÄúLakers -3.5 spread‚Äù)
  ‚ñ† Justification (Their last games and historical data to backup why we chose this)
  ‚ñ† Mention player props only if specific stats are found in the scores data
  ‚ñ† Their last 5 games and historical data to backup why we chose this
These four data must be accurate.

üìâ If there‚Äôs not enough data for strong predictions, say that clearly instead of guessing.
         `
            },
            {
                role: 'user',
                content: `My prompt: ${prompt}\n\nHere's the relevant sports data:\n${sportsDataString}`
            }
        ];

        const baseUrl = process.env.URL || process.env.DEPLOY_URL || 'http://localhost:8888';
        const response = await fetch(`${baseUrl}/.netlify/functions/openai`, {
            method: 'POST', // Increase max tokens for more detailed response
            body: JSON.stringify({
                messages,
                use_claude: true,  // Use OpenAI
                max_tokens: 500   // Increase max tokens for more detailed response
            })
        });
        console.log(`üì• OpenAI response status: ${response.status}`);
        const data = await response.json();

        if (!data.message) {
            throw new Error('Failed to generate response');
        }

        return {
            predictionsText: data.message.content,
        };
    } catch (error) {
        console.error('Error generating response:', error);
        throw error;
    }
}

module.exports = {
    generatePredictions
};
